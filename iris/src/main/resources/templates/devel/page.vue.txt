<template>
    <!-- record dialog -->
    <el-dialog v-model="recordDialog.visible" :title="(recordDialog.id === null ? '新建' : '修改') + `${menuName}`"
        width="560" @close="formRef?.clearValidate()">
        <el-form label-width="110px" :model="recordDialog" v-loading="recordDialog.loading" ref="formRef"
            :rules="formRules">
            <el-form-item label="名称" prop="name">
                <el-input v-model="recordDialog.name" type="text" autocomplete="off" />
            </el-form-item>
        </el-form>
        <template #footer>
            <span class="dialog-footer">
                <el-button @click="recordDialog.visible = false">取消</el-button>
                <el-button type="primary" @click="saveRec">确定</el-button>
            </span>
        </template>
    </el-dialog>

    <el-row justify="start">
        <el-button type="primary" plain @click="newRec"
            v-if="userStore.hasAuthorize(`/${moduleName}/${businessNameVar}/add`)">新建</el-button>
    </el-row><br>
    <el-row justify="start">
        <el-form :inline="true">
            <el-form-item label="名字">
                <el-input v-model="queryData.query" placeholder="" @keydown.enter="query" clearable />
            </el-form-item>
            <el-form-item>
                <el-button type="primary" @click="query">查询</el-button>
            </el-form-item>
        </el-form>
    </el-row>
    <el-table v-loading="loading" :data="result.rows" style="width: 100%; margin-bottom: 20px" row-key="id" border
        default-expand-all>
        <el-table-column prop="id" label="id" width="80" />
        <el-table-column prop="name" label="名称" />
        <el-table-column prop="createdAt" label="建立时间" />
        <el-table-column label="操作" width="120">
            <template #default="scope">
                <el-button link type="primary" size="small" @click="editRec(scope.row)"
                    v-if="userStore.hasAuthorize(`/${moduleName}/${businessNameVar}/edit`)">修改</el-button>
                <el-button link type="primary" size="small" @click="deleteRec(scope.row)"
                    v-if="userStore.hasAuthorize(`/${moduleName}/${businessNameVar}/delete`)">删除</el-button>
            </template>
        </el-table-column>
    </el-table>
    <el-row justify="end">
        <el-pagination layout="total, sizes, prev, pager, next, jumper" v-model:current-page="queryData.page"
            v-model:page-size="queryData.pageSize" :page-count="result.totalPages" :page-sizes="[20, 50, 80, 100]"
            :total="result.totalRecords" />
    </el-row>
</template>
<script setup lang="ts">
import { ref, reactive, useTemplateRef, onMounted, watch } from 'vue'
import { useUserStore } from '@/stores/user'
import { ElMessage, ElMessageBox } from 'element-plus'
import ${moduleName}Api from '@/api/${moduleName}'
import type { FormInstance } from 'element-plus'

const userStore = useUserStore()

const queryData = reactive({
    query: '',
    page: 1,
    pageSize: 20,
    sort: ''
})

const result = reactive({
    rows: [] as any,
    totalPages: 0 as number,
    totalRecords: 0 as number
})

const recordDialog = reactive({
    id: null as number | null,
    name: '' as string,
    loading: false,
    visible: false
})

const formRef = useTemplateRef<FormInstance>('formRef')
const formRules = {
    name: [
        { required: true, message: '请输入名称', trigger: 'blur' }
    ],
}

const loading = ref(true)

const query = async () => {
    loading.value = true
    const resp = await ${moduleName}Api.get${businessName}List(queryData) as any
    Object.assign(result, resp.data)
    loading.value = false
}

const newRec = () => {
    Object.assign(recordDialog, {
        id: null,
        name: '',
        visible: true
    })
}
const saveRec = async () => {
    formRef.value?.validate(async (valid: boolean) => {
        if (!valid) return
        recordDialog.loading = true
        const { loading, visible, ...postData } = recordDialog
        try {
            if (recordDialog.id == null) {
                await ${moduleName}Api.add${businessName}(postData)
                ElMessage.success(`新建${menuName}完成`)
            } else {
                await ${moduleName}Api.edit${businessName}(postData)
                ElMessage.success(`修改${menuName}完成`)
            }
            recordDialog.visible = false
            query()
        }
        finally {
            recordDialog.loading = false
        }
    })
}

const editRec = (row: any) => {
    Object.assign(recordDialog, row)
    recordDialog.visible = true
}

const deleteRec = (row: any) => {
    ElMessageBox.confirm(`确定删除该${menuName}吗？`).then(() => {
    ${moduleName}Api.delete${businessName}({ id: row.id }).then(() => {
        ElMessage.success(`删除${menuName}完成`)
        query()
    })
    })
}

onMounted(() => {
    query()
})

watch(() => ({
    page: queryData.page,
    sort: queryData.sort
}), () => {
    query();
}, { deep: true });

</script>

<style lang="scss" scoped></style>